services:
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT}:80"
    environment:
      - BACKEND_URL=http://localhost:${BACKEND_PORT}

  api:
    build:
      context: .
      dockerfile: ./ExchangeRates.Api/Dockerfile
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      - ConnectionStrings__Postgres=Server=postgres;Port=${POSTGRES_PORT};Database=${POSTGRES_DB};User Id=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};
      - ConnectionStrings__Redis=${REDIS_HOST}:${REDIS_PORT}
      - ExternalApi__Url=${EXTERNAL_API_URL}
      - ExternalApi__Key=${EXTERNAL_API_KEY}
    depends_on:
      - postgres
      - redis

  fetcher:
    build:
      context: .
      dockerfile: ./ExchangeRates.Fetcher/Dockerfile
    environment:
      - ConnectionStrings__Postgres=Server=postgres;Port=${POSTGRES_PORT};Database=${POSTGRES_DB};User Id=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};
      - ConnectionStrings__Redis=${REDIS_HOST}:${REDIS_PORT}
      - ExternalApi__Url=${EXTERNAL_API_URL}
      - ExternalApi__Key=${EXTERNAL_API_KEY}
    depends_on:
      - postgres
      - redis

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d:ro

networks:
  default:
    driver: bridge
